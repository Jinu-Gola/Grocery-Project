import React, { useState, useEffect } from 'react'
import Header from './Header'
import Search from './Search'
import Footer from './Footer'
import { Link, useNavigate } from 'react-router-dom'
import axios from 'axios'
import useRazorpay from 'react-razorpay'

function Billing() {
    const navigate = useNavigate();
    var token = localStorage.getItem("token");
    const [profiles, setProfiles] = useState("")


    const [inputs, setInputs] = useState({})
    const [cartitem, setCartItem] = useState([])
    const [cartTotal, setCartTotal] = useState(0);
    const [err, setErr] = useState({})

    useEffect(() => {
        if (!token) {
            navigate('/login')
        }
        profile();
        cartList()
    }, [])
    const validation = () => {
        const error = {}
        const emailpattern = /^[a-z0-9._]+@[a-z]+\.[a-z]{2,4}$/
        const namepattern = /^[a-zA-Z\s]{2,50}$/;
        const phonepattern = /^[0-9]{10,}$/;
        const pincodepattern = /^[0-9]{6,}$/;


        if (!inputs.fname) {
            error.fname = "Name is required!"
        }
        else if (!namepattern.test(inputs.fname)) {
            error.fname = "Please Enter valid name"
        }
        if (!inputs.lname) {
            error.lname = "Name is required!"
        }
        else if (!namepattern.test(inputs.lname)) {
            error.lname = "Please Enter valid name"
        }
        if (!inputs.email) {
            error.email = "Email is required!"
        }
        else if (!emailpattern.test(inputs.email)) {
            error.email = "Please Enter valid email address"
        }
        if (!inputs.mobile) {
            error.mobile = "Phone number is required!"
        }
        else if (!phonepattern.test(inputs.mobile)) {
            error.mobile = "Please Enter valid phone number"
        }

        if (!inputs.pincode) {
            error.pincode = "Pincode is required!"
        }
        else if (!pincodepattern.test(inputs.pincode)) {
            error.pincode = "Please Enter valid pincode number"
        }
        if (!inputs.address) {
            error.address = "Address is required!"
        }
        if (!inputs.country) {
            error.country = "Country is required!"
        }
        if (!inputs.city) {
            error.city = "City is required!"
        }


        return error;
    }
    const cartlist = JSON.parse(localStorage.getItem('cartlist'))
    // const userinfo = JSON.parse(localStorage.getItem('user'))
    const handleChange = (e) => {
        const name = e?.target?.name;
        const value = e?.target?.value;
        setInputs({ ...inputs, [name]: value })
    }
    useEffect(() => {
        // const user_id = userinfo === null ? "" : userinfo[0]?.email

        // const data = cartlist?.filter((data) => data.uid === user_id)
        //     .map((items) => {
        //         return items
        //     })
        profile()
        setCartItem()
    }, []);

    // const handleSubmit = async (e) => {
    //     e.preventDefault();
    //     setErr(validation(inputs));
    //     console.log(inputs);



    // }

    const profile = async () => {
        try {
            const res = await axios.get(`http://localhost:8080/auth/${token}`);
            // console.log(res.data);
            if (res.data === "Token is expired ") {
                // console.log(res.data);
                localStorage.removeItem("token");
                navigate("/login");
                alert("Token is expired ");
            }
            else {
                setProfiles(res.data);
                // console.log("admin =" + res.data.isAdmin)
            }
        } catch (error) {
            console.log("profile err", error);
        }
    };


    const cartList = async () => {
        let cartlist = [];
        console.log(cartList);
        cartlist = JSON.parse(localStorage.getItem('cartlist'))
        console.log(cartlist);
        setCartItem(cartlist)
        console.log(setCartItem);
    }

    const totalPrice = () => {
        // const total_amt = cartitem?.reduce((total, item) => parseInt(total) + (parseInt(item.uqty) * parseInt(item.price)), 0)
        const total_amt = cartitem?.reduce((total, item) => total + Number(item.uqty * item.price), 0)
        setCartTotal(total_amt)
    }

    // const handelpayment = async (amt) => {
    //     try {
    //         // setLoading(true);
    //         const { data: paymentData } = await axios.post('http://localhost:5000/payment', { amount: amt });
    //         console.log("payment data", paymentData);
    //         handelopenrazorpay(paymentData);

    //     } catch (error) {
    //         console.log("payment error", error);
    //     } 
    // }

    // const handelopenrazorpay = (dat) => {
    //     if (window.Razorpay) {
    //         const options = {
    //             // "key": "rzp_test_0yPlbNRf5AdsX7", // Enter the Key ID generated from the Dashboard
    //             // "amount": dat.amount / 100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
    //             // "currency": dat.currency,

    //             // "order_id": dat.id, // This is a sample Order ID. Pass the id obtained in the response of Step 1
    //             "handler": function (response) {
    //                 console.log("response", response);
    //                 // setPayid(response.razorpay_payment_id);
    //                 // setOrid(response.razorpay_order_id);
    //                 // setSign(response.razorpay_signature);
    //                 axios.post('http://localhost:5000/verify', { response: response }).then((res) => {
    //                     if (res.status === 200) {
    //                         axios.post('http://localhost:5000/order', {
    //                             // product: cartitems,
    //                             // payid: payid,
    //                             // // orderid:orid,
    //                             // // signature:sign,
    //                             // amount: data.amount,
    //                             // email: data.email,

    //                         });
    //                         console.log("Order placed successfully");
    //                         console.log("if condition", res);
    //                         localStorage.removeItem("product");

    //                     } else {

    //                         console.log("else condition", res);
    //                     }
    //                 });
    //             },

    //         };

    //     }




    // }


    // const hadelpayment = async (amt) => {
    //     try {
    //         const _data = { amount: amt };
    //         const res = await axios.post('http://localhost:8080/orders', _data)
    //         console.log("payment data", res.data);
    //         handelopenrazorpay(res.data.data);
    //     } catch (error) {
    //         console.log("payment error", error);
    //     }
    // }
    const Razorpay = useRazorpay();

    const hadelpayment = (data) => {
        setErr(validation(inputs));
        console.log(inputs);
        console.log("HandlePaymenttttttttttttttttttt");
        var total = Number(totalPrice())
        var options = {
            key: "rzp_test_8VysNy7EGQyYhF", // Enter the Key ID generated from the Dashboard
            amount: parseInt(total) * 100, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
            currency: "INR",
            name: "SuperGrocery",
            description: "you can pay your bill using razorpay",
            order_id: "", //This is a sample Order ID. Pass the id obtained in the response of Step 1
            handler: async function (response) {
                console.log("response", response);
                //     const user_id = userinfo === null ? "" : userinfo[0]?.email

                //     let object ={
                //      orderInfo: { uid: user_id,
                //         fname:inputs.fname,
                //         lname:inputs.lname,
                //         adderss:inputs.adderss,
                //         mobile:inputs.mobile,
                //         email:inputs.email,
                //         transaction_id: response.razorpay_payment_id,
                //         total_amt: parseInt(total) * 100,
                //         subtotal: parseInt(total) * 100,
                //         discount: 0,

                //     },
                //         orderDetail:cartList()
                // }
                const result = await axios.post('http://localhost:8080/orders', { ...inputs }).then((res) => {
                    console.log(result, "final result data");
                    if (res.status === 200) {
                        // console.log("if condition", res)
                        localStorage.removeItem("cartlist");
                        // const cartlist = JSON.parse(localStorage.getItem('cartlist'))
                        // const filterList = cartlist.filter(item => item.uid !== user[0].email)
                        // localStorage.setItem("cartlist", JSON.stringify(filterList))
                        // window.location.reload()
                        // navigate("/");
                        cartList()
                        navigate('/');
                    }
                    else {
                        // show();
                        console.log("please login again")
                        console.log("else condition", res);
                    }
                })




            },
            theme: {
                "color": "#81c408"
            }
        };
        const rzp = new window.Razorpay(options);
        rzp.open();
    }

    return (
        <>
            <Header />
            <Search />
            {/* Single Page Header start */}
            <div className="container-fluid page-header py-5">
                <h1 className="text-center text-white display-6">Checkout</h1>
                <ol className="breadcrumb justify-content-center mb-0">
                    <li className="breadcrumb-item"><Link to='/' style={{ color: "white" }}>Home</Link></li>
                    <li className="breadcrumb-item"><Link to='' style={{ color: "white" }}>Pages</Link></li>
                    <li className="breadcrumb-item active text-white">Checkout</li>
                </ol>
            </div>
            {/* Single Page Header End */}
            {/* Checkout Page Start */}
            <div className="container-fluid py-5">
                <div className="container py-5">
                    <h1 className="mb-4">Billing details</h1>
                    <form >
                        <div className="row g-5">
                            <div className="col-md-12 col-lg-6 col-xl-7">
                                <div className="row">
                                    <div className="col-md-12 col-lg-6">
                                        <div className="form-item w-100">
                                            <label className="form-label my-3">First Name<sup>*</sup></label>
                                            <input type="text" className="form-control" name='fname' onChange={handleChange} required />
                                        </div>
                                    </div>
                                    <div className="col-md-12 col-lg-6">
                                        <div className="form-item w-100">
                                            <label className="form-label my-3">Last Name<sup>*</sup></label>
                                            <input type="text" className="form-control" name='lname' onChange={handleChange} required />
                                        </div>
                                    </div>
                                </div>
                                {/* <div className="form-item">
                                    <label className="form-label my-3">Company Name<sup>*</sup></label>
                                    <input type="text" className="form-control" />
                                </div> */}
                                <div className="form-item">
                                    <label className="form-label my-3">Address <sup>*</sup></label>
                                    <input type="text" className="form-control" placeholder="House Number Street Name" name='address' onChange={handleChange} required />
                                </div>
                                <div className="form-item">
                                    <label className="form-label my-3">Town/City<sup>*</sup></label>
                                    <input type="text" className="form-control" name='city' onChange={handleChange} required />
                                </div>
                                <div className="form-item">
                                    <label className="form-label my-3">Country<sup>*</sup></label>
                                    <input type="text" className="form-control" name='country' onChange={handleChange} required />
                                </div>
                                <div className="form-item">
                                    <label className="form-label my-3">Postcode/Zip<sup>*</sup></label>
                                    <input type="text" className="form-control" name='pincode' onChange={handleChange} />
                                </div>
                                <div className="form-item">
                                    <label className="form-label my-3">Mobile<sup>*</sup></label>
                                    <input type="tel" className="form-control" name='mobile' onChange={handleChange} required />
                                </div>
                                <div className="form-item">
                                    <label className="form-label my-3">Email Address<sup>*</sup></label>
                                    <input type="email" className="form-control" name='email' onChange={handleChange} required />
                                </div>
                                <div className="form-check my-3">
                                    <input type="checkbox" className="form-check-input" id="Account-1" name="Accounts" defaultValue="Accounts" />
                                    <label className="form-check-label" htmlFor="Account-1">Create an account?</label>
                                </div>
                                <hr />
                                <div className="form-check my-3">
                                    <input className="form-check-input" type="checkbox" id="Address-1" name="Address" defaultValue="Address" />
                                    <label className="form-check-label" htmlFor="Address-1">Ship to a different address?</label>
                                </div>
                                {/* <div className="form-item">
                                    <textarea name="text" className="form-control" spellCheck="false" cols={30} rows={11} placeholder="Oreder Notes (Optional)" defaultValue={""} />
                                </div> */}
                            </div>
                            <div className="col-md-12 col-lg-6 col-xl-5">
                                <div className="table-responsive">
                                    <table className="table">
                                        <thead>
                                            <tr>
                                                <th scope="col">Products</th>
                                                <th scope="col">Name</th>
                                                <th scope="col">Price</th>
                                                <th scope="col">Quantity</th>
                                                <th scope="col">Total</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            {cartitem.map((item, index) => {
                                                let p_total = parseInt(item?.uqty) * parseInt(item?.price);
                                                return (<tr>
                                                    <th scope="row">
                                                        <div className="d-flex align-items-center mt-2">
                                                            <img src={`http://localhost:8080/images/${item.image[0]}`} className="img-fluid rounded-circle" style={{ width: 90, height: 90 }} alt />
                                                        </div>
                                                    </th>
                                                    <td className="py-5">{item.product_name}</td>
                                                    <td className="py-5">₹{item.price}</td>
                                                    <td className="py-5">{item.uqty}</td>
                                                    <td className="py-5">₹{p_total}</td>
                                                </tr>)
                                            })}
                                            {/* <tr>
                                                <th scope="row">
                                                </th>
                                                <td className="py-5" />
                                                <td className="py-5" />
                                                <td className="py-5">
                                                    <p className="mb-0 text-dark py-3">Subtotal</p>
                                                </td>
                                                <td className="py-5">
                                                    <div className="py-3 border-bottom border-top">
                                                        <p className="mb-0 text-dark">₹{totalPrice()}</p>
                                                    </div>
                                                </td>
                                            </tr> */}
                                            {/* <tr>
                                                <th scope="row">
                                                </th>
                                                <td className="py-5">
                                                    <p className="mb-0 text-dark py-4">Shipping</p>
                                                </td>
                                                <td colSpan={3} className="py-5">
                                                    <div className="form-check text-start">
                                                        <input type="checkbox" className="form-check-input bg-primary border-0" id="Shipping-1" name="Shipping-1" value={0}/>
                                                        <label className="form-check-label" htmlFor="Shipping-1">Free Shipping</label>
                                                    </div>
                                                    <div className="form-check text-start">
                                                        <input type="checkbox" className="form-check-input bg-primary border-0" id="Shipping-2" name="Shipping-1" value={10}/>
                                                        <label className="form-check-label" htmlFor="Shipping-2">Flat rate: ₹10.00</label>
                                                    </div>
                                                    {/* <div className="form-check text-start">
                                                        <input type="checkbox" className="form-check-input bg-primary border-0" id="Shipping-3" name="Shipping-1" defaultValue="Shipping" />
                                                        <label className="form-check-label" htmlFor="Shipping-3">Local Pickup: ₹50.00</label>
                                                    </div> 
                                                </td>
                                            </tr>
                                            <tr>
                                                <th scope="row">
                                                </th>
                                                <td className="py-5">
                                                    <p className="mb-0 text-dark text-uppercase py-3">TOTAL</p>
                                                </td>
                                                <td className="py-5" />
                                                <td className="py-5" />
                                                <td className="py-5">
                                                    <div className="py-3 border-bottom border-top">
                                                        <p className="mb-0 text-dark">₹{totalPrice()}</p>
                                                    </div>
                                                </td>
                                            </tr> */}

                                        </tbody>
                                    </table>
                                </div>
                                <div className="row g-4 justify-content-end">
                                    <div className="col-8" />
                                    <div className="col-sm-8 col-md-7 col-lg-6 col-xl-8">
                                        <div className="bg-light rounded">
                                            <div className="p-4">
                                                <h3 className=" mb-4">Final <span className="fw-normal">Amount</span></h3>
                                                <div className="d-flex justify-content-between mb-4">
                                                    <h5 className="mb-0 me-4">Subtotal:</h5>
                                                    <p className="mb-0">₹{totalPrice()}</p>
                                                </div>
                                                <div className="d-flex justify-content-between">
                                                    <h5 className="mb-0 me-4">Shipping</h5>
                                                    <div className>
                                                        <p className="mb-0">{0}</p>
                                                    </div>
                                                </div>
                                                {/* <p className="mb-0 text-end">Shipping to Ukraine.</p> */}
                                            </div>
                                            <div className="py-4 mb-4 border-top border-bottom d-flex justify-content-between">
                                                <h5 className="mb-0 ps-4 me-4">Total</h5>
                                                {/* cartitem!=null?g_Total:item?.reduce(tot,obj)=>parseInt(tot) */}
                                                <p className="mb-0 pe-4">₹{totalPrice()}</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                {/* <div className="row g-4 text-center align-items-center justify-content-center border-bottom py-3">
                                    <div className="col-12">
                                        <div className="form-check text-start my-3">
                                            <input type="checkbox" className="form-check-input bg-primary border-0" id="Transfer-1" name="Transfer" defaultValue="Transfer" />
                                            <label className="form-check-label" htmlFor="Transfer-1">Direct Bank Transfer</label>
                                        </div>
                                        <p className="text-start text-dark">Make your payment directly into our bank account. Please use your Order ID as the payment reference. Your order will not be shipped until the funds have cleared in our account.</p>
                                    </div>
                                </div>
                                <div className="row g-4 text-center align-items-center justify-content-center border-bottom py-3">
                                    <div className="col-12">
                                        <div className="form-check text-start my-3">
                                            <input type="checkbox" className="form-check-input bg-primary border-0" id="Payments-1" name="Payments" defaultValue="Payments" />
                                            <label className="form-check-label" htmlFor="Payments-1">Check Payments</label>
                                        </div>
                                    </div>
                                </div>
                                <div className="row g-4 text-center align-items-center justify-content-center border-bottom py-3">
                                    <div className="col-12">
                                        <div className="form-check text-start my-3">
                                            <input type="checkbox" className="form-check-input bg-primary border-0" id="Delivery-1" name="Delivery" defaultValue="Delivery" />
                                            <label className="form-check-label" htmlFor="Delivery-1">Cash On Delivery</label>
                                        </div>
                                    </div>
                                </div> */}
                                {/* <div className="row g-4 text-center align-items-center justify-content-center border-bottom py-3">
                                    <div className="col-12">
                                        <div className="form-check text-start my-3">
                                            <input type="checkbox" className="form-check-input bg-primary border-0" id="Paypal-1" name="Paypal" defaultValue="Paypal" />
                                            <label className="form-check-label" htmlFor="Paypal-1">Paypal</label>
                                        </div>
                                    </div>
                                </div> */}
                                <div className="row g-4 text-center align-items-center justify-content-center pt-4 ">
                                    <button type="submit" className="btn border-secondary py-3 px-4 text-uppercase w-100 text-primary" onClick={() => { hadelpayment(totalPrice()) }}>Place Order</button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            {/*Checkout Page End*/}
            <Footer />

        </>
    )
}

export default Billing
